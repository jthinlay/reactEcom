{"ast":null,"code":"var _jsxFileName = \"/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        IsLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","fetchCollectionsStartAsync","CollectionsOverviewContainer","CollectionPage","WithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,iCAApE;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,OAAOC,WAAP,MAAwB,sDAAxB;AAGA,MAAMC,yBAAyB,GAAGD,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAElCC,EAAAA,iBAAiB,GAAE;AAAA,UACTP,0BADS,GACqB,KAAKQ,KAD1B,CACTR,0BADS;AAEhBA,IAAAA,0BAA0B;AAC5B;;AACDS,EAAAA,MAAM,GAAE;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,mBADV,eACUA,mBADV;AAGJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAAjB;AACI,MAAA,SAAS,EAAIX,4BADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAKA,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKS,KAAK,CAACE,IAAX,mBAAX;AACI,MAAA,MAAM,EAAGJ,KAAD,IAAS,oBAAC,yBAAD;AACb,QAAA,SAAS,EAAE,CAAEG;AADA,SAETH,KAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADJ;AAYH;;AArBiC;;AAuBtC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAE7Cc,EAAAA,mBAAmB,EAAEZ;AAFwB,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACtCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADJ,CAAf,CAA3B;;AAGA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionFetching, selectIsCollectionsLoaded} from '../../redux/shop/shop.selectors'\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\n\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); \n\nclass ShopPage extends React.Component{\n    \n    componentDidMount(){\n       const {fetchCollectionsStartAsync} = this.props;\n       fetchCollectionsStartAsync();\n    }\n    render(){\n        const {match, isCollectionsLoaded} = this.props;\n        \n        return(\n            <div className='shop-page'>  \n\n            <Route exact path={`${match.path}`}  \n                component = {CollectionsOverviewContainer} />\n                    \n            <Route path={`${match.path}/:collectionId`} \n                render={(props)=><CollectionPageWithSpinner \n                    IsLoading={! isCollectionsLoaded} \n                    {...props}/>} />\n            </div>\n        )\n    }\n} \nconst mapStateToProps = createStructuredSelector({\n    \n    isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}