{"ast":null,"code":"import shopActionTypes from './shop.type';\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('colletions');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["shopActionTypes","takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACvC,MAAG;AACI,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAAEI,+BAAF,EAAmCM,QAAnC,CAAjC;AAEA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AAEH,GAPJ,CAOI,OAAMC,KAAN,EAAY;AAET,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAWC,qBAAX,GAAmC;AACtC,QAAMhB,UAAU,CACZD,eAAe,CAACkB,uBADJ,EAC6BT,qBAD7B,CAAhB;AAEH;AAGD,OAAO,UAAUU,SAAV,GAAqB;AACxB,QAAMf,GAAG,CAAC,CAACF,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import shopActionTypes from './shop.type';\nimport {takeLatest, call, put, all} from 'redux-saga/effects';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions'\n\nexport function* fetchCollectionsAsync(){\n try{\n        const collectionRef = firestore.collection('colletions');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call (convertCollectionsSnapshotToMap, snapshot);\n        \n        yield put(fetchCollectionsSuccess(collectionsMap));\n\n    }catch(error){\n        \n        yield put(fetchCollectionsFailure(error.message))\n    }\n}\n\nexport function*  fetchCollectionsStart() {\n    yield takeLatest(\n        shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n\n\nexport function* shopSagas(){\n    yield all([call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}