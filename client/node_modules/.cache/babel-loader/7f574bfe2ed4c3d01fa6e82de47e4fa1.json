{"ast":null,"code":"import shopActionTypes from './shop.type';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('colletions');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["shopActionTypes","takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACvC,MAAG;AACI,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMX,IAAI,CAAEG,+BAAF,EAAmCM,QAAnC,CAAjC;AAEA,UAAMR,GAAG,CAACG,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GANJ,CAMI,OAAMC,KAAN,EAAY;AACT,UAAMX,GAAG,CAACI,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAWC,qBAAX,GAAmC;AACtC,QAAMf,UAAU,CACZD,eAAe,CAACiB,uBADJ,EAEZT,qBAFY,CAAhB;AAGH","sourcesContent":["import shopActionTypes from './shop.type';\nimport {takeLatest, call, put} from 'redux-saga/effects';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions'\n\nexport function* fetchCollectionsAsync(){\n try{\n        const collectionRef = firestore.collection('colletions');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call (convertCollectionsSnapshotToMap, snapshot);\n        \n        yield put(fetchCollectionsSuccess(collectionsMap));\n    }catch(error){\n        yield put(fetchCollectionsFailure(error.message))\n    }\n}\n\nexport function*  fetchCollectionsStart() {\n    yield takeLatest(\n        shopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}