{"ast":null,"code":"var _jsxFileName = \"/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollection } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('colletions');\n    fetch('https://firestore.googleapis.com/v1/projects/crwn-db-e42e2/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get().then(snapshot => {\n    //    const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //    updateCollections(collectionsMap);\n    //    this.setState({loading: false}); \n    // })\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        IsLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        IsLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCollections: collectionsMap => dispatch(updateCollection(collectionsMap))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","updateCollection","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD0B;AAAA,SAKlCC,uBALkC,GAKR,IALQ;AAAA;;AAOlCC,EAAAA,iBAAiB,GAAE;AAAA,UACPC,iBADO,GACc,KAAKC,KADnB,CACPD,iBADO;AAGf,UAAME,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,YAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,sGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFrB,EALe,CAUf;AACA;AACA;AACA;AACA;AACH;;AACDG,EAAAA,MAAM,GAAE;AAAA,UACGC,KADH,GACY,KAAKX,KADjB,CACGW,KADH;AAAA,UAEGf,OAFH,GAEc,KAAKD,KAFnB,CAEGC,OAFH;AAGJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKe,KAAK,CAACC,IAAX,CAAjB;AAAqC,MAAA,MAAM,EAAGZ,KAAD,IAAS,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEJ;AAA3C,SAAwDI,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGZ,KAAD,IAAS,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEJ;AAAtC,SAAmDI,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAMH;;AAhCiC;;AAmCtC,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHf,IAAAA,iBAAiB,EAAGgB,cAAD,IAAoBD,QAAQ,CAAC7B,gBAAgB,CAAC8B,cAAD,CAAjB;AAD5C,GAAP;AAGH,CAJD;;AAKA,eAAe/B,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkCpB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {updateCollection} from '../../redux/shop/shop.actions'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); \n\nclass ShopPage extends React.Component{\n    state = {\n        loading: true\n    }\n\n    unsubscribeFromSnapshot = null; \n\n    componentDidMount(){\n        const { updateCollections} = this.props\n\n        const collectionRef = firestore.collection('colletions');\n\n        fetch('https://firestore.googleapis.com/v1/projects/crwn-db-e42e2/databases/(default)/documents/collections')\n        .then(response => response.json())\n        .then(collections => console.log(collections) ); \n\n\n        // collectionRef.get().then(snapshot => {\n        //    const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        //    updateCollections(collectionsMap);\n        //    this.setState({loading: false}); \n        // })\n    }\n    render(){\n        const {match} = this.props;\n        const {loading} = this.state;\n        return(\n            <div className='shop-page'>  \n            <Route exact path={`${match.path}`}  render={(props)=><CollectionsOverviewWithSpinner IsLoading={loading} {...props}/>} />\n            <Route path={`${match.path}/:collectionId`} render={(props)=><CollectionPageWithSpinner IsLoading={loading} {...props}/>} />\n            </div>\n        )\n    }\n} \n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCollections: (collectionsMap) => dispatch(updateCollection(collectionsMap))\n    }\n}\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}