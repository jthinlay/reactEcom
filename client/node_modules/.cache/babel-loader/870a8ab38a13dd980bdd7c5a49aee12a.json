{"ast":null,"code":"var _jsxFileName = \"/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentails;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do'not match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"I do not have an account\"),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Sign up with your email and password\"),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: handleChange,\n      lable: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: handleChange,\n      lable: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"SIGN UP\")))\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentails => dispatch(signUpStart(userCredentails))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signUpStart","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","userCredentails","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,uBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,+BAA9C;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACL,EAAAA;AAAD,CAAD,KAAmB;AAE9B,QAAM,CAACM,eAAD,EAAkBC,cAAlB,IAAoCT,QAAQ,CAAC;AAC/CU,IAAAA,WAAW,EAAE,EADkC;AAE/CC,IAAAA,KAAK,EAAE,EAFwC;AAG/CC,IAAAA,QAAQ,EAAE,EAHqC;AAI/CC,IAAAA,eAAe,EAAE;AAJ8B,GAAD,CAAlD;AAOJ,QAAM;AAACH,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAAmDC,eAAzD;;AAEA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGL,QAAQ,KAAKC,eAAhB,EAAgC;AAC5BK,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACH;;AACDhB,IAAAA,WAAW,CAAC;AAACQ,MAAAA,WAAD;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,KAAD,CAAX;AACH,GARL;;AASA,QAAMO,YAAY,GAAGH,KAAK,IAAI;AACtB,UAAM;AAACI,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAiBL,KAAK,CAACM,MAA7B;AACAb,IAAAA,cAAc,CAAE,EAAC,GAAGD,eAAJ;AAAqB,OAACY,IAAD,GAASC;AAA9B,KAAF,CAAd;AACH,GAHL;;AAMQ;AAAA;AACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ;AAAA;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ;AAAA;AAGI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAEN,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,wBAAC,SAAD;AACI,MAAA,IAAI,EAAG,MADX;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,KAAK,EAAGL,WAHZ;AAII,MAAA,QAAQ,EAAIS,YAJhB;AAKI,MAAA,KAAK,EAAC,cALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAAA;AASI,wBAAC,SAAD;AACI,MAAA,IAAI,EAAG,OADX;AAEI,MAAA,IAAI,EAAG,OAFX;AAGI,MAAA,KAAK,EAAGR,KAHZ;AAII,MAAA,QAAQ,EAAIQ,YAJhB;AAKI,MAAA,KAAK,EAAG,OALZ;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ;AAAA;AAiBI,wBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAEP,QAHX;AAII,MAAA,QAAQ,EAAIO,YAJhB;AAKI,MAAA,KAAK,EAAG,UALZ;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ;AAAA;AA0BI,wBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,iBAFT;AAGI,MAAA,KAAK,EAAEN,eAHX;AAII,MAAA,QAAQ,EAAIM,YAJhB;AAKI,MAAA,KAAK,EAAG,kBALZ;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ;AAAA;AAkCA,wBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlCA,CAHJ;AADJ;AA4CH,CAtEL;;AAwEA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCtB,EAAAA,WAAW,EAAGY,eAAD,IAAqBU,QAAQ,CAACtB,WAAW,CAACY,eAAD,CAAZ;AADN,CAAL,CAAnC;;AAGA,eAAeb,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport './sign-up.styles.scss';\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user.actions'\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\n\nconst SignUp = ({signUpStart}) => {\n\n    const [userCredentials, setCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n    \nconst {displayName, email, password, confirmPassword } = userCredentails ;\n\nconst handleSubmit = async event => {\n        event.preventDefault();\n\n        if(password !== confirmPassword){\n            alert(\"Passwords do'not match\");\n            return; \n        }\n        signUpStart({displayName, email, password}); \n    }\nconst handleChange = event => {\n        const {name, value } = event.target;\n        setCredentials( {...userCredentials, [name] : value } )\n    }\n    \n       \n        return (\n            <div className=\"sign-up\">\n                <h2 className='title'>I do not have an account</h2>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput \n                        type = 'text' \n                        name='displayName' \n                        value ={displayName} \n                        onChange = {handleChange}\n                        label='Display Name'\n                        required\n                        />\n                    <FormInput \n                        type = 'email'\n                        name = 'email'\n                        value= {email}\n                        onChange = {handleChange}\n                        label = 'Email'\n                        required\n                    />\n                    <FormInput \n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange = {handleChange}\n                        lable = 'Password'\n                        required\n                     />\n\n                    <FormInput \n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange = {handleChange}\n                        lable = 'Confirm Password'\n                        required\n                     />\n                <CustomButton type='submit'>\n                        SIGN UP\n                </CustomButton>\n                </form>\n            </div>\n        )\n    }\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentails) => dispatch(signUpStart(userCredentails))\n})\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}