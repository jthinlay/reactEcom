{"ast":null,"code":"import shopActionTypes from './shop.type';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCUSS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('colletions');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","collectionsMap","type","FETCH_COLLECTIONS_SUCCUSS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,yBADgC;AAEtDC,EAAAA,OAAO,EAACH;AAF8C,CAAL,CAA9C;AAKP,OAAO,MAAMI,uBAAuB,GAAIC,YAAD,KAAmB;AACtDJ,EAAAA,IAAI,EAAEL,eAAe,CAACU,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAnB,CAAhC;AAKP,OAAO,MAAME,qBAAqB,GAAG,OAAO;AACxCN,EAAAA,IAAI,EAAEL,eAAe,CAACY;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACH,qBAAqB,EAAtB,CAAR;AAEAI,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AAClC,YAAMf,cAAc,GAAGF,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACX,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACF,KAHD,EAGGgB,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACN,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIA,GARD;AASF,CAVM","sourcesContent":["import shopActionTypes from './shop.type'\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCUSS,\n    payload:collectionsMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsStart = () => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsStartAsync = () => {\n   return dispatch => {\n    const collectionRef = firestore.collection('colletions');\n    dispatch(fetchCollectionsStart());\n\n    collectionRef.get().then(snapshot => {\n       const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n       dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n   }\n}\n"]},"metadata":{},"sourceType":"module"}