{"ast":null,"code":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A container for all of the Logger instances\r\n */\n\n\nvar instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n  LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n  LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n  LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n  LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\n/**\r\n * The default log level\r\n */\n\n\nvar defaultLogLevel = LogLevel.INFO;\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\n\nvar defaultLogHandler = function (instance, logType) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  if (logType < instance.logLevel) {\n    return;\n  }\n\n  var now = new Date().toISOString();\n\n  switch (logType) {\n    /**\r\n     * By default, `console.debug` is not displayed in the developer console (in\r\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n     * logs to the `console.log` function.\r\n     */\n    case LogLevel.DEBUG:\n      console.log.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n      break;\n\n    case LogLevel.VERBOSE:\n      console.log.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n      break;\n\n    case LogLevel.INFO:\n      console.info.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n      break;\n\n    case LogLevel.WARN:\n      console.warn.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n      break;\n\n    case LogLevel.ERROR:\n      console.error.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n      break;\n\n    default:\n      throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n  }\n};\n\nvar Logger =\n/** @class */\nfunction () {\n  /**\r\n   * Gives you an instance of a Logger to capture messages according to\r\n   * Firebase's logging scheme.\r\n   *\r\n   * @param name The name that the logs will be associated with\r\n   */\n  function Logger(name) {\n    this.name = name;\n    /**\r\n     * The log level of the given Logger instance.\r\n     */\n\n    this._logLevel = defaultLogLevel;\n    /**\r\n     * The log handler for the Logger instance.\r\n     */\n\n    this._logHandler = defaultLogHandler;\n    /**\r\n     * Capture the current instance for later use\r\n     */\n\n    instances.push(this);\n  }\n\n  Object.defineProperty(Logger.prototype, \"logLevel\", {\n    get: function () {\n      return this._logLevel;\n    },\n    set: function (val) {\n      if (!(val in LogLevel)) {\n        throw new TypeError('Invalid value assigned to `logLevel`');\n      }\n\n      this._logLevel = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Logger.prototype, \"logHandler\", {\n    get: function () {\n      return this._logHandler;\n    },\n    set: function (val) {\n      if (typeof val !== 'function') {\n        throw new TypeError('Value assigned to `logHandler` must be a function');\n      }\n\n      this._logHandler = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * The functions below are all based on the `console` interface\r\n   */\n\n  Logger.prototype.debug = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\n  };\n\n  Logger.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\n  };\n\n  Logger.prototype.info = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\n  };\n\n  Logger.prototype.warn = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\n  };\n\n  Logger.prototype.error = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\n  };\n\n  return Logger;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction setLogLevel(level) {\n  instances.forEach(function (inst) {\n    inst.logLevel = level;\n  });\n}\n\nexport { LogLevel, Logger, setLogLevel };","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/node_modules/@firebase/logger/dist/index.esm.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","instances","LogLevel","defaultLogLevel","INFO","defaultLogHandler","instance","logType","args","_i","logLevel","now","Date","toISOString","DEBUG","console","log","apply","name","VERBOSE","info","WARN","warn","ERROR","error","Error","Logger","_logLevel","_logHandler","push","Object","defineProperty","prototype","get","set","val","TypeError","enumerable","configurable","debug","setLogLevel","level","forEach","inst"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { LogLevel, Logger, setLogLevel };\n//# sourceMappingURL=index.esm.js.map\n"]},"metadata":{},"sourceType":"module"}