{"ast":null,"code":"var _jsxFileName = \"/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        IsLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        IsLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","fetchCollectionsStartAsync","CollectionsOverview","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,iCAApE;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMI,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAsC;AAElCC,EAAAA,iBAAiB,GAAE;AAAA,UACTR,0BADS,GACqB,KAAKS,KAD1B,CACTT,0BADS;AAEhBA,IAAAA,0BAA0B;AAC5B;;AACDU,EAAAA,MAAM,GAAE;AAAA,wBACuD,KAAKD,KAD5D;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,oBADV,eACUA,oBADV;AAAA,UACgCC,mBADhC,eACgCA,mBADhC;AAGJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAAjB;AAAqC,MAAA,MAAM,EAAGL,KAAD,IAAS,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKE,KAAK,CAACG,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGL,KAAD,IAAS,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAMH;;AAfiC;;AAiBtC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEd,0BADuB;AAE7Ce,EAAAA,mBAAmB,EAAEd;AAFwB,CAAD,CAAhD;;AAKA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACtCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADJ,CAAf,CAA3B;;AAGA,eAAeJ,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionFetching, selectIsCollectionsLoaded} from '../../redux/shop/shop.selectors'\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); \n\nclass ShopPage extends React.Component{\n    \n    componentDidMount(){\n       const {fetchCollectionsStartAsync} = this.props;\n       fetchCollectionsStartAsync();\n    }\n    render(){\n        const {match, isCollectionFetching, isCollectionsLoaded} = this.props;\n        \n        return(\n            <div className='shop-page'>  \n            <Route exact path={`${match.path}`}  render={(props)=><CollectionsOverviewWithSpinner IsLoading={isCollectionFetching} {...props}/>} />\n            <Route path={`${match.path}/:collectionId`} render={(props)=><CollectionPageWithSpinner IsLoading={!isCollectionsLoaded} {...props}/>} />\n            </div>\n        )\n    }\n} \nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}