{"ast":null,"code":"'use strict';\n\nconst cosmiconfig = require('cosmiconfig');\n\nconst _require = require('./utils'),\n      getId = _require.getId;\n\nconst _ref = cosmiconfig('reselector').searchSync() || {},\n      config = _ref.config;\n\nmodule.exports = Object.assign({\n  env: false,\n  envName: process.env.BABEL_ENV || process.env.NODE_ENV || 'development',\n  name: 'data-tid',\n  propName: 'data-tid-prop',\n  getId,\n  syntaxes: ['@babel/plugin-syntax-async-generators', '@babel/plugin-syntax-class-properties',\n  /**\n   * @see https://github.com/babel/babel/issues/7786\n   */\n  ['@babel/plugin-syntax-decorators', {\n    legacy: true\n  }], '@babel/plugin-syntax-dynamic-import', '@babel/plugin-syntax-export-default-from', '@babel/plugin-syntax-export-namespace-from', '@babel/plugin-syntax-flow', '@babel/plugin-syntax-function-bind', '@babel/plugin-syntax-import-meta', '@babel/plugin-syntax-jsx', '@babel/plugin-syntax-nullish-coalescing-operator', '@babel/plugin-syntax-numeric-separator', '@babel/plugin-syntax-object-rest-spread', '@babel/plugin-syntax-optional-catch-binding', '@babel/plugin-syntax-optional-chaining', ['@babel/plugin-syntax-pipeline-operator', {\n    proposal: 'minimal'\n  }], '@babel/plugin-syntax-throw-expressions']\n}, config);","map":null,"metadata":{},"sourceType":"script"}