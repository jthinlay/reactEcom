{"ast":null,"code":"import _defineProperty from \"/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCVam477Q3nroM_2JgvXGkb_hTFiVdTyIU\",\n  authDomain: \"crwn-db-e42e2.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-e42e2.firebaseio.com\",\n  projectId: \"crwn-db-e42e2\",\n  storageBucket: \"crwn-db-e42e2.appspot.com\",\n  messagingSenderId: \"304311040079\",\n  appId: \"1:304311040079:web:d58bc9feeaf9da9a80123a\",\n  measurementId: \"G-NKBC45GC5K\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const collectionRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log({\n    collectionSnapshot\n  });\n  console.log('jt');\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n      console.log(createdAt);\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapshot","console","log","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAqC;AAC1E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AAEA,MAAG,CAACJ,QAAQ,CAACK,MAAb,EAAoB;AAAA,UACTC,WADS,GACad,QADb,CACTc,WADS;AAAA,UACIC,KADJ,GACaf,QADb,CACIe,KADJ;AAEhB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAG;AACC,YAAMf,OAAO,CAACgB,GAAR;AACFJ,QAAAA,WADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICf,cAJD,EAAN;AAMAU,MAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACH,KARD,CAQC,OAAMG,KAAN,EAAY;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACH;AACJ;;AAED,SAAOlB,OAAP;AACH,CA7BM;AA+BPb,QAAQ,CAACgC,aAAT,CAAuB/B,MAAvB;AAEA,OAAO,MAAMgC,IAAI,GAAGjC,QAAQ,CAACiC,IAAT,EAAb;AACP,OAAO,MAAMnB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMoB,QAAQ,GAAG,IAAIlC,QAAQ,CAACiC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAelC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyCVam477Q3nroM_2JgvXGkb_hTFiVdTyIU\",\n    authDomain: \"crwn-db-e42e2.firebaseapp.com\",\n    databaseURL: \"https://crwn-db-e42e2.firebaseio.com\",\n    projectId: \"crwn-db-e42e2\",\n    storageBucket: \"crwn-db-e42e2.appspot.com\",\n    messagingSenderId: \"304311040079\",\n    appId: \"1:304311040079:web:d58bc9feeaf9da9a80123a\",\n    measurementId: \"G-NKBC45GC5K\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData ) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const collectionRef = firestore.collection('users');\n\n    const snapShot = await userRef.get();\n    const collectionSnapshot = await collectionRef.get();\n\n    console.log({collectionSnapshot}); \n    console.log('jt')\n\n    if(!snapShot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n            console.log(createdAt);\n        }catch(error){\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n}\n\nfirebase.initializeApp(config)\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n\n\n"]},"metadata":{},"sourceType":"module"}