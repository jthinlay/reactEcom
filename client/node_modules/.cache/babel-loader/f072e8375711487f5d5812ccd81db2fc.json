{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield talkeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n} // watch Saga function*\n\nexport function* userSagas() {\n  yield all([call(isUserAuthenticated), call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","isUserAuthenticated","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onCheckUserSession","CHECK_USER_SESSION","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","talkeLatest","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\nimport UserActionTypes from './user.types';\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils'\nimport {\n    signInSuccess, signInFailure, \n    signOutSuccess, signOutFailure,\n    signUpSuccess, signUpFailure\n} from './user.actions';\n\n\n export function* getSnapshotFromUserAuth(userAuth, additionalData){\n     try{\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get(); \n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data() }))\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n }\n\nexport function* isUserAuthenticated(){\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user)\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }catch(error){\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(error){\n        yield put(signOutFailure(error))\n\n    }\n}\n\n\n\n\n\n\nexport function* signUp({payload: {email, password, displayName}}){\n    try{\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\n    }catch(error){\n        yield put(signUpFailure(error))\n    }\n}\nexport function* signInAfterSignUp({payload: {user, additionalData}}){\n  yield getSnapshotFromUserAuth(user, additionalData)\n}\n\n\n\n\nexport function* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle )\n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail )\n}\nexport function* onSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\nexport function* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\nexport function* onSignUpSuccess(){\n    yield talkeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}       \n\n\n// watch Saga function*\nexport function* userSagas(){\n    yield all([ \n            call(isUserAuthenticated),\n            call(onGoogleSignInStart),\n            call(onEmailSignInStart),\n            call(onSignOutStart),\n            call(onSignUpStart),\n            call(onSignUpSuccess)\n        ]); \n}"]},"metadata":{},"sourceType":"module"}