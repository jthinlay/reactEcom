{"ast":null,"code":"'use strict';\n\nconst _require = require('@babel/core'),\n      transformSync = _require.transformSync;\n\nconst _require2 = require('fs'),\n      readFileSync = _require2.readFileSync;\n\nconst _require3 = require('./utils'),\n      getNode = _require3.getNode,\n      getName = _require3.getName,\n      isElement = _require3.isElement,\n      getHashmapFromComment = _require3.getHashmapFromComment;\n\nconst createResolve = config => {\n  const NAME = config.name;\n\n  const getParser = () => {\n    const exports = {};\n\n    const addExport = (p, {\n      file\n    }) => {\n      const data = getNode(p);\n      if (!data) return;\n      const filename = file.opts.filename;\n      const name = getName(data);\n      const id = config.getId(filename, name);\n      exports[name] = {\n        [NAME]: id\n      };\n    };\n\n    return {\n      exports,\n      plugin: () => ({\n        visitor: {\n          JSXElement(p, state) {\n            if (!isElement(p.node)) {\n              return;\n            }\n\n            addExport(p, state);\n          },\n\n          CallExpression(p, state) {\n            if (!isElement(p.node)) {\n              return;\n            }\n\n            addExport(p, state);\n          }\n\n        }\n      })\n    };\n  };\n\n  const cache = {};\n\n  const resolve = filename => {\n    if (!cache[filename]) {\n      const content = readFileSync(filename).toString();\n      const hashmap = getHashmapFromComment(content);\n\n      if (hashmap) {\n        cache[filename] = hashmap;\n      } else {\n        const parser = getParser();\n        transformSync(content, {\n          babelrc: false,\n          filename,\n          plugins: [...config.syntaxes, [parser.plugin]]\n        });\n        cache[filename] = parser.exports;\n      }\n    }\n\n    return cache[filename];\n  };\n\n  const resolveBy = resolver => path => resolve(resolver(path));\n\n  return {\n    resolve,\n    resolveBy\n  };\n};\n\nconst _createResolve = createResolve(require('./config')),\n      resolve = _createResolve.resolve,\n      resolveBy = _createResolve.resolveBy;\n\nmodule.exports = resolve;\nmodule.exports.default = resolve;\nmodule.exports.resolveBy = resolveBy;\nmodule.exports.createResolve = createResolve;","map":null,"metadata":{},"sourceType":"script"}