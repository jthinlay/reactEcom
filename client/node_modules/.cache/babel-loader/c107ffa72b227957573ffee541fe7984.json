{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    this.setState({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActinTypes.SIGN_UP_START, signUp);\n} // watch Saga function*\n\nexport function* userSagas() {\n  yield all([call(isUserAuthenticated), call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","isUserAuthenticated","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signOut","signUp","displayName","confirmPassword","createUserWithEmailAndPassword","setState","onCheckUserSession","CHECK_USER_SESSION","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignOutStart","SIGN_OUT_START","onSignUpStart","UserActinTypes","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\nimport UserActionTypes from './user.types';\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils'\nimport {\n    signInSuccess, signInFailure, \n    signOutSuccess, signOutFailure, \n    signUpSuccess, signUpFailure\n} from './user.actions';\n\n\n export function* getSnapshotFromUserAuth(userAuth){\n     try{\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get(); \n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data() }))\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n }\n\nexport function* isUserAuthenticated(){\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user)\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }catch(error){\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(error){\n        yield put(signOutFailure(error))\n\n    }\n}\n\nexport function* signUp({payload: {displayName, email, password, confirmPassword}}){\n    try{\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n            yield createUserProfileDocument(user, {displayName});\n            this.setState({\n                displayName: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            });\n    }catch(error){\n        yield put(signUpFailure(error))\n    }\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle )\n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail )\n}\nexport function* onSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\nexport function* onSignUpStart(){\n    yield takeLatest(UserActinTypes.SIGN_UP_START, signUp)\n}\n\n// watch Saga function*\nexport function* userSagas(){\n    yield all([ \n            call(isUserAuthenticated),\n            call(onGoogleSignInStart),\n            call(onEmailSignInStart),\n            call(onSignOutStart),\n            call(onSignUpStart)\n        ]); \n}"]},"metadata":{},"sourceType":"module"}