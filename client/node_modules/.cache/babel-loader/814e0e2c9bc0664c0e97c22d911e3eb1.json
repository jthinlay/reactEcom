{"ast":null,"code":"import shopActionTypes from './shop.type';\nimport { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('colletions');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["shopActionTypes","takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,YAArB,CAAtB;AAGID,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AAClC,UAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACCE,IAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIP;AACD,OAAO,UAAWC,qBAAX,GAAmC;AACtC,QAAMlB,SAAS,CACXD,eAAe,CAACoB,uBADL,EAEXd,qBAFW,CAAf;AAGH","sourcesContent":["import shopActionTypes from './shop.type';\nimport {takeEvery} from 'redux-saga/effects';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions'\n\nexport function* fetchCollectionsAsync(){\n    yield console.log('I am fired'); \n\n    const collectionRef = firestore.collection('colletions');\n           \n \n        collectionRef.get().then(snapshot => {\n           const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\nexport function*  fetchCollectionsStart() {\n    yield takeEvery(\n        shopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}