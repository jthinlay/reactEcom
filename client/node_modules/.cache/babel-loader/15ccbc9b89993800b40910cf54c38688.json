{"ast":null,"code":"var _jsxFileName = \"/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/with-data.js\";\nimport React from 'react';\n\nconst withData = (WrappedComponent, dataSource) => {\n  class WithData extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: []\n      };\n    }\n\n    componentDidMount() {\n      fetch(dataSource).then(response => response.json()).then(data => this.setState({\n        data: data.slice(0, 3)\n      }));\n    }\n\n    render() {\n      return React.createElement(WrappedComponent, Object.assign({\n        data: this.state.data\n      }, Props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return WithData;\n};\n\nexport default withData;","map":{"version":3,"sources":["/Users/jampathinlay/Desktop/react-folder/project2/crwn-clothing/src/with-data.js"],"names":["React","withData","WrappedComponent","dataSource","WithData","Component","constructor","props","state","data","componentDidMount","fetch","then","response","json","setState","slice","render","Props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,gBAAD,EAAmBC,UAAnB,KAAkC;AAC/C,QAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsC;AAClCC,IAAAA,WAAW,CAACC,KAAD,EAAO;AACd,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,IAAI,EAAE;AADG,OAAb;AAGH;;AACDC,IAAAA,iBAAiB,GAAE;AACfC,MAAAA,KAAK,CAACR,UAAD,CAAL,CACCS,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMH,IAAI,IAAI,KAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEA,IAAI,CAACO,KAAL,CAAW,CAAX,EAAc,CAAd;AAAR,OAAd,CAFd;AAGH;;AACDC,IAAAA,MAAM,GAAE;AACJ,aAAO,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC;AAAnC,SAA6CS,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAdiC;;AAgBtC,SAAOd,QAAP;AACH,CAlBD;;AAmBA,eAAeH,QAAf","sourcesContent":["import React from 'react';\n\nconst withData = (WrappedComponent, dataSource) => {\n    class WithData extends React.Component{\n        constructor(props){\n            super(props);\n            this.state = {\n                data: []\n            }\n        }\n        componentDidMount(){\n            fetch(dataSource)\n            .then(response => response.json())\n            .then(data => this.setState({ data: data.slice(0, 3)}))\n        }\n        render(){\n            return <WrappedComponent data={this.state.data} {...Props} />\n        }\n    }\n    return WithData\n}\nexport default withData"]},"metadata":{},"sourceType":"module"}